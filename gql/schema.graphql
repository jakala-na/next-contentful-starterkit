type Query {
  assets(uid: String!, locale: String = "en-us", fallback_locale: Boolean = false): SysAsset
  all_assets(where: SysAssetWhere, locale: String = "en-us", order_by: [SysAssetOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllSysAsset
  product_page(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): ProductPage
  all_product_page(where: ProductPageWhere, locale: String! = "en-us", order_by: [ProductPageOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllProductPage
  blog_post(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): BlogPost
  all_blog_post(where: BlogPostWhere, locale: String! = "en-us", order_by: [BlogPostOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllBlogPost
  footer(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): Footer
  all_footer(where: FooterWhere, locale: String! = "en-us", order_by: [FooterOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllFooter
  header(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): Header
  all_header(where: HeaderWhere, locale: String! = "en-us", order_by: [HeaderOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllHeader
  page(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): Page
  all_page(where: PageWhere, locale: String! = "en-us", order_by: [PageOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllPage
  author(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): Author
  all_author(where: AuthorWhere, locale: String! = "en-us", order_by: [AuthorOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllAuthor
  web_configuration(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): WebConfiguration
  all_web_configuration(where: WebConfigurationWhere, locale: String! = "en-us", order_by: [WebConfigurationOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllWebConfiguration
  product_test(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): ProductTest
  all_product_test(where: ProductTestWhere, locale: String! = "en-us", order_by: [ProductTestOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllProductTest
  test_page(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): TestPage
  all_test_page(where: TestPageWhere, locale: String! = "en-us", order_by: [TestPageOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllTestPage
  article(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): Article
  all_article(where: ArticleWhere, locale: String! = "en-us", order_by: [ArticleOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllArticle
  home_page(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): HomePage
  all_home_page(where: HomePageWhere, locale: String! = "en-us", order_by: [HomePageOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllHomePage
  landing_page(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): LandingPage
  all_landing_page(where: LandingPageWhere, locale: String! = "en-us", order_by: [LandingPageOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllLandingPage
  cta_group(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): CtaGroup
  all_cta_group(where: CtaGroupWhere, locale: String! = "en-us", order_by: [CtaGroupOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllCtaGroup
  article_listing_page(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): ArticleListingPage
  all_article_listing_page(where: ArticleListingPageWhere, locale: String! = "en-us", order_by: [ArticleListingPageOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllArticleListingPage
  navigation(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): Navigation
  all_navigation(where: NavigationWhere, locale: String! = "en-us", order_by: [NavigationOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllNavigation
  menu(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): Menu
  all_menu(where: MenuWhere, locale: String! = "en-us", order_by: [MenuOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllMenu
  mega_menu(uid: String!, locale: String! = "en-us", fallback_locale: Boolean = false): MegaMenu
  all_mega_menu(where: MegaMenuWhere, locale: String! = "en-us", order_by: [MegaMenuOrderBy] = [updated_at_DESC], skip: Int = 0, limit: Int = 25, fallback_locale: Boolean = false): AllMegaMenu
}

type SysAsset {
  title: String
  url(
    """
    Contentstack Image Delivery API is used to retrieve, manipulate and/or convert image files of your Contentstack account and deliver it to your web or mobile properties
    """
    transform: SysAssetTransformUrl
  ): String
  content_type: String
  filename: String
  file_size: Int
  description: String
  dimension: SysAssetDimension
  metadata: JSON
  unique_identifier: String
  system: SysAssetSystemField
}

input SysAssetTransformUrl {
  height: String
  width: String

  """
  Format parameter lets you converts a given image from one format to another
  """
  format: SysAssetImageFormats

  """
  The disable parameter disables the functionality that is enabled by default
  """
  disable: SysAssetDisableValues

  """
  Fit parameter enables you to fit the given image properly within the specified height and width
  """
  fit: SysAssetFitValues
  quality: Int
  crop: String
  trim: String

  """
  The orient parameter lets you control the cardinal orientation of the given image
  """
  orient: SysAssetOrientValues
  overlay: String
  overlay_align: SysAssetOverlayAlignValues

  """
  The overlay_repeat parameter lets you define how the overlay image will be repeated on the given image
  """
  overlay_repeat: SysAssetOverlayRepeatValues

  """
  When the auto parameter is set to webp, it enables WebP image support. WebP images have higher compression rate with minimum loss of quality.
  """
  auto: SysAssetAutoValues

  """The disposition parameter lets you allow image to download or render. """
  disposition: SysAssetDispositionValues

  """
  The dpr parameter lets you deliver images with appropriate size to devices that come with a defined device pixel ratio. The device pixel ratio of any device determines the screen resolution that its CSS would interpret
  """
  dpr: String

  """
  The bg-color parameter lets you set a backgroud color for the given image. This is useful when applying padding or for replacing the transparent pixels of an image
  """
  bg_color: String

  """
  This parameter lets you add extra pixels to the edges of an image. You can specify values for top, right, bottom, and left padding for an image
  """
  pad: String

  """
  The value for this parameter can be set in pixels or percentage. For pixel value, use any whole number between 1 and 8192. For percentage value, use any decimal number between 0.0 and 0.99. When height is defined in percentage, it relative to the output image
  """
  overlay_height: String

  """
  The value for this parameter can be set in pixels or percentage. For pixel value, use any whole number between 1 and 8192. For percentage value, use any decimal number between 0.0 and 0.99. When width is defined in percentage, it is relative to the output image
  """
  overlay_width: String
}

enum SysAssetImageFormats {
  """Convert an image to GIF format"""
  GIF

  """Convert an image to PNG format"""
  PNG

  """Convert an image to JPEG format"""
  JPG

  """
  A Progressive JPEG is an image file created using a compression method that displays higher detail in progression
  """
  PJPG

  """WEBP images are usually lower in size and have good quality"""
  WEBP

  """WEBP Lossless format"""
  WEBPLL

  """WEBP Lossy format"""
  WEBPLY
}

enum SysAssetDisableValues {
  """
  UPSCALE is always enabled, in which the image is upscaled if the output image (by specifying the width or height) is bigger than the source image
  """
  UPSCALE
}

enum SysAssetFitValues {
  BOUNDS
  CROP
}

enum SysAssetOrientValues {
  """Set image to default"""
  DEFAULT

  """Flip image horizontally"""
  HORIZONTALLY

  """Flip image horizontally and vertically"""
  BOTH

  """Flip image vertically"""
  VERTICALLY

  """Flip image horizontally and then rotate 90 degrees towards left"""
  ROTATE90LEFT

  """Rotate image 90 degrees towards right"""
  ROTATE90RIGHT
}

"""
The overlay_align parameter allows you to put one image on top of another
"""
enum SysAssetOverlayAlignValues {
  """Align the overlay image to the top of the actual image"""
  TOP

  """Align the overlay image to the bottom of the actual image"""
  BOTTOM

  """Align the overlay image to the left of the actual image"""
  LEFT

  """Align the overlay image to the right of the actual image"""
  RIGHT

  """Align the overlay image to the middle (vertically) of the actual image"""
  MIDDLE

  """
  Align the overlay image to the center (horizontally) of the actual image
  """
  CENTER
}

enum SysAssetOverlayRepeatValues {
  """Horizontal repetition"""
  X

  """Vertical repetition"""
  Y

  """Horizontal and vertical repetition"""
  BOTH
}

"""WEBP images are usually lower in size and have good quality."""
enum SysAssetAutoValues {
  WEBP
}

"""This parameter allows an image to be downloaded or rendered on page"""
enum SysAssetDispositionValues {
  """Allows to download an image"""
  ATTACHMENT

  """Allows an image to be rendered on page"""
  INLINE
}

type SysAssetDimension {
  width: Int
  height: Int
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type SysAssetSystemField {
  branch: String
  created_at: DateTime
  updated_at: DateTime
  created_by: String
  updated_by: String
  uid: String
  tags: [String]
  version: Int
  content_type_uid: String
  publish_details: SystemPublishDetails
  extensionConnection(skip: Int = 0, limit: Int = 25): SysExtensionConnection
}

"""
This field accepts both ISODateString and ISODateTimeStringexample: 1992-08-14 or 1992-08-14T03:42:00.000Z
"""
scalar DateTime

type SystemPublishDetails {
  environment: String
  locale: String
  time: DateTime
  user: String
}

type SysExtensionConnection {
  totalCount: Int
  edges: [SysExtensionEdge]
}

type SysExtensionEdge {
  node: SysMetadata
}

type SysMetadata {
  metadata: [JSON]
  extension_uid: String
}

type AllSysAsset {
  total: Int
  items: [SysAsset]
}

input SysAssetWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  filename: String
  filename_ne: String
  filename_in: [String]
  filename_nin: [String]
  filename_exists: Boolean
  description: String
  description_ne: String
  description_in: [String]
  description_nin: [String]
  description_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  file_size: Int
  file_size_ne: Int
  file_size_in: [Int]
  file_size_nin: [Int]
  file_size_exists: Boolean
  file_size_lt: Int
  file_size_lte: Int
  file_size_gt: Int
  file_size_gte: Int
  dimension_exists: Boolean
  dimension: SysAssetDimensionWhere
  tags: String
  tags_in: [String]
  tags_nin: [String]
  AND: [SysAssetWhere]
  OR: [SysAssetWhere]
}

input SysAssetDimensionWhere {
  width: Int
  width_ne: Int
  width_in: [Int]
  width_nin: [Int]
  width_exists: Boolean
  width_lt: Int
  width_lte: Int
  width_gt: Int
  width_gte: Int
  height: Int
  height_ne: Int
  height_in: [Int]
  height_nin: [Int]
  height_exists: Boolean
  height_lt: Int
  height_lte: Int
  height_gt: Int
  height_gte: Int
}

enum SysAssetOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type ProductPage {
  title: String
  url: String
  product_components: [ProductPageProductComponents]
  system: EntrySystemField
}

union ProductPageProductComponents = ProductPageProductComponentsHero | ProductPageProductComponentsOverview | ProductPageProductComponentsFeaturesList | ProductPageProductComponentsDatasheets | ProductPageProductComponentsCompareTables

type ProductPageProductComponentsHero {
  hero: ProductPageProductComponentsHeroBlock
}

type ProductPageProductComponentsHeroBlock {
  title: String
  description: String
  cta: Link
  images: ProductPageProductComponentsHeroBlockImages
}

type Link {
  title: String
  href: String
}

type ProductPageProductComponentsHeroBlockImages {
  product_imagesConnection: SysAssetConnection
}

type SysAssetConnection {
  totalCount: Int
  edges: [SysAssetEdge]
}

type SysAssetEdge {
  node: SysAsset
}

type ProductPageProductComponentsOverview {
  overview: ProductPageProductComponentsOverviewBlock
}

type ProductPageProductComponentsOverviewBlock {
  title: String
  content_block_1: String
  cta: Link
  content_block_2: String
}

type ProductPageProductComponentsFeaturesList {
  features_list: ProductPageProductComponentsFeaturesListBlock
}

type ProductPageProductComponentsFeaturesListBlock {
  features_title: String
  features: [ProductPageProductComponentsFeaturesListBlockFeatures]
}

type ProductPageProductComponentsFeaturesListBlockFeatures {
  iconConnection: SysAssetConnection
  title: String
  description: String
}

type ProductPageProductComponentsDatasheets {
  datasheets: ProductPageProductComponentsDatasheetsBlock
}

type ProductPageProductComponentsDatasheetsBlock {
  datsheets_title: String
  datasheets_list: [ProductPageProductComponentsDatasheetsBlockDatasheetsList]
}

type ProductPageProductComponentsDatasheetsBlockDatasheetsList {
  iconConnection: SysAssetConnection
  link: Link
  open_in_new_window: Boolean
}

type ProductPageProductComponentsCompareTables {
  compare_tables: ProductPageProductComponentsCompareTablesBlock
}

type ProductPageProductComponentsCompareTablesBlock {
  title: String
  tables: [ProductPageProductComponentsCompareTablesBlockTables]
}

type ProductPageProductComponentsCompareTablesBlockTables {
  imageConnection: SysAssetConnection
  title: String
  properties: String
}

type EntrySystemField {
  branch: String
  created_at: DateTime
  publish_details: SystemPublishDetails
  updated_at: DateTime
  created_by: String
  updated_by: String
  uid: String
  tags: [String]
  version: Int
  content_type_uid: String
  locale: String
  extensionConnection(skip: Int = 0, limit: Int = 25): SysExtensionConnection
}

type AllProductPage {
  total: Int
  items: [ProductPage]
}

input ProductPageWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  product_components: ProductPageProductComponentsWhere
  product_components_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [ProductPageWhere]
  OR: [ProductPageWhere]
}

input ProductPageProductComponentsWhere {
  hero: ProductPageProductComponentsHeroBlockWhere
  hero_exists: Boolean
  overview: ProductPageProductComponentsOverviewBlockWhere
  overview_exists: Boolean
  features_list: ProductPageProductComponentsFeaturesListBlockWhere
  features_list_exists: Boolean
  datasheets: ProductPageProductComponentsDatasheetsBlockWhere
  datasheets_exists: Boolean
  compare_tables: ProductPageProductComponentsCompareTablesBlockWhere
  compare_tables_exists: Boolean
}

input ProductPageProductComponentsHeroBlockWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  description: String
  description_ne: String
  description_in: [String]
  description_nin: [String]
  description_exists: Boolean
  cta: LinkWhere
  cta_exists: Boolean
  images: ProductPageProductComponentsHeroBlockImagesWhere
  images_exists: Boolean
}

input LinkWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  href: String
  href_ne: String
  href_in: [String]
  href_nin: [String]
  href_exists: Boolean
}

input ProductPageProductComponentsHeroBlockImagesWhere {
  product_images: SysAssetWhere
  product_images_exists: Boolean
}

input ProductPageProductComponentsOverviewBlockWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  content_block_1: String
  content_block_1_ne: String
  content_block_1_in: [String]
  content_block_1_nin: [String]
  content_block_1_exists: Boolean
  cta: LinkWhere
  cta_exists: Boolean
  content_block_2: String
  content_block_2_ne: String
  content_block_2_in: [String]
  content_block_2_nin: [String]
  content_block_2_exists: Boolean
}

input ProductPageProductComponentsFeaturesListBlockWhere {
  features_title: String
  features_title_ne: String
  features_title_in: [String]
  features_title_nin: [String]
  features_title_exists: Boolean
  features: ProductPageProductComponentsFeaturesListBlockFeaturesWhere
  features_exists: Boolean
}

input ProductPageProductComponentsFeaturesListBlockFeaturesWhere {
  icon: SysAssetWhere
  icon_exists: Boolean
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  description: String
  description_ne: String
  description_in: [String]
  description_nin: [String]
  description_exists: Boolean
}

input ProductPageProductComponentsDatasheetsBlockWhere {
  datsheets_title: String
  datsheets_title_ne: String
  datsheets_title_in: [String]
  datsheets_title_nin: [String]
  datsheets_title_exists: Boolean
  datasheets_list: ProductPageProductComponentsDatasheetsBlockDatasheetsListWhere
  datasheets_list_exists: Boolean
}

input ProductPageProductComponentsDatasheetsBlockDatasheetsListWhere {
  icon: SysAssetWhere
  icon_exists: Boolean
  link: LinkWhere
  link_exists: Boolean
  open_in_new_window: Boolean
  open_in_new_window_exists: Boolean
  open_in_new_window_ne: Boolean
}

input ProductPageProductComponentsCompareTablesBlockWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  tables: ProductPageProductComponentsCompareTablesBlockTablesWhere
  tables_exists: Boolean
}

input ProductPageProductComponentsCompareTablesBlockTablesWhere {
  image: SysAssetWhere
  image_exists: Boolean
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  properties: String
  properties_ne: String
  properties_in: [String]
  properties_nin: [String]
  properties_exists: Boolean
}

input SystemPublishDetailsWhere {
  time: DateTime
  time_ne: DateTime
  time_in: [DateTime]
  time_nin: [DateTime]
  time_lt: DateTime
  time_lte: DateTime
  time_gt: DateTime
  time_gte: DateTime
  user: String
  user_ne: String
  user_in: [String]
  user_nin: [String]
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
}

enum ProductPageOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type BlogPost {
  title: String
  url: String
  authorConnection: BlogPostAuthorConnection
  date: DateTime
  featured_imageConnection: SysAssetConnection
  body: BlogPostBody
  related_postConnection(skip: Int = 0, limit: Int = 100): BlogPostRelatedPostConnection
  is_archived: Boolean
  seo: Seo
  system: EntrySystemField
}

type BlogPostAuthorConnection {
  totalCount: Int
  edges: [BlogPostAuthorEdge]
}

type BlogPostAuthorEdge {
  node: BlogPostAuthorNode
}

union BlogPostAuthorNode = Author

type Author {
  title: String
  pictureConnection: SysAssetConnection
  bio: String
  system: EntrySystemField
}

type BlogPostBody {
  json: JSON
  embedded_itemsConnection(skip: Int = 0, limit: Int = 100): BlogPostBodyEmbeddedItemsConnection
}

type BlogPostBodyEmbeddedItemsConnection {
  totalCount: Int
  edges: [BlogPostBodyEmbeddedItemsEdge]
}

type BlogPostBodyEmbeddedItemsEdge {
  node: BlogPostBodyEmbeddedItemsNode
}

union BlogPostBodyEmbeddedItemsNode = SysAsset

type BlogPostRelatedPostConnection {
  totalCount: Int
  edges: [BlogPostRelatedPostEdge]
}

type BlogPostRelatedPostEdge {
  node: BlogPostRelatedPostNode
}

union BlogPostRelatedPostNode = BlogPost

type Seo {
  title: String
  description: String
  canonical_url: String
  no_index: Boolean
  no_follow: Boolean
}

type AllBlogPost {
  total: Int
  items: [BlogPost]
}

input BlogPostWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  author: BlogPostAuthorWhere
  author_exists: Boolean
  date: DateTime
  date_in: [DateTime]
  date_nin: [DateTime]
  date_exists: Boolean
  date_ne: DateTime
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  featured_image: SysAssetWhere
  featured_image_exists: Boolean
  body: JSON
  body_exists: Boolean
  related_post: BlogPostRelatedPostWhere
  related_post_count: Int
  related_post_exists: Boolean
  is_archived: Boolean
  is_archived_exists: Boolean
  is_archived_ne: Boolean
  seo: SeoWhere
  seo_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [BlogPostWhere]
  OR: [BlogPostWhere]
}

input BlogPostAuthorWhere {
  author: AuthorWhere
  MATCH: EvalReferenceEnum
}

input AuthorWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  picture: SysAssetWhere
  picture_exists: Boolean
  bio: String
  bio_ne: String
  bio_in: [String]
  bio_nin: [String]
  bio_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [AuthorWhere]
  OR: [AuthorWhere]
}

enum EvalReferenceEnum {
  ANY
  ALL
}

input BlogPostRelatedPostWhere {
  blog_post: BlogPostWhere
  MATCH: EvalReferenceEnum
}

input SeoWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  description: String
  description_ne: String
  description_in: [String]
  description_nin: [String]
  description_exists: Boolean
  canonical_url: String
  canonical_url_ne: String
  canonical_url_in: [String]
  canonical_url_nin: [String]
  canonical_url_exists: Boolean
  no_index: Boolean
  no_index_exists: Boolean
  no_index_ne: Boolean
  no_follow: Boolean
  no_follow_exists: Boolean
  no_follow_ne: Boolean
}

enum BlogPostOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type Footer {
  title: String
  logoConnection: SysAssetConnection
  navigation: FooterNavigation
  social: FooterSocial
  copyright: FooterCopyright
  system: EntrySystemField
}

type FooterNavigation {
  link: [Link]
}

type FooterSocial {
  social_share: [FooterSocialSocialShare]
}

type FooterSocialSocialShare {
  link: Link
  iconConnection: SysAssetConnection
}

type FooterCopyright {
  json: JSON
  embedded_itemsConnection(skip: Int = 0, limit: Int = 100): FooterCopyrightEmbeddedItemsConnection
}

type FooterCopyrightEmbeddedItemsConnection {
  totalCount: Int
  edges: [FooterCopyrightEmbeddedItemsEdge]
}

type FooterCopyrightEmbeddedItemsEdge {
  node: FooterCopyrightEmbeddedItemsNode
}

union FooterCopyrightEmbeddedItemsNode = SysAsset

type AllFooter {
  total: Int
  items: [Footer]
}

input FooterWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  logo: SysAssetWhere
  logo_exists: Boolean
  navigation: FooterNavigationWhere
  navigation_exists: Boolean
  social: FooterSocialWhere
  social_exists: Boolean
  copyright: JSON
  copyright_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [FooterWhere]
  OR: [FooterWhere]
}

input FooterNavigationWhere {
  link: LinkWhere
  link_exists: Boolean
}

input FooterSocialWhere {
  social_share: FooterSocialSocialShareWhere
  social_share_exists: Boolean
}

input FooterSocialSocialShareWhere {
  link: LinkWhere
  link_exists: Boolean
  icon: SysAssetWhere
  icon_exists: Boolean
}

enum FooterOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type Header {
  title: String
  logoConnection: SysAssetConnection
  navigation_menu: [HeaderNavigationMenu]
  notification_bar: HeaderNotificationBar
  system: EntrySystemField
}

type HeaderNavigationMenu {
  label: String
  page_referenceConnection: HeaderNavigationMenuPageReferenceConnection
}

type HeaderNavigationMenuPageReferenceConnection {
  totalCount: Int
  edges: [HeaderNavigationMenuPageReferenceEdge]
}

type HeaderNavigationMenuPageReferenceEdge {
  node: HeaderNavigationMenuPageReferenceNode
}

union HeaderNavigationMenuPageReferenceNode = Page

type Page {
  title: String
  url: String
  page_components: [PagePageComponents]
  seo: Seo
  system: EntrySystemField
}

union PagePageComponents = PagePageComponentsHeroBanner | PagePageComponentsContactDetails | PagePageComponentsSectionWithBuckets | PagePageComponentsSection | PagePageComponentsSectionWithCards | PagePageComponentsSectionWithHtmlCode | PagePageComponentsFromBlog | PagePageComponentsOurTeam | PagePageComponentsWidget

type PagePageComponentsHeroBanner {
  hero_banner: PagePageComponentsHeroBannerBlock
}

type PagePageComponentsHeroBannerBlock {
  banner_imageConnection: SysAssetConnection
  bg_color: String
  text_color: String
  banner_title: String
  banner_description: String
  call_to_action: Link
}

type PagePageComponentsContactDetails {
  contact_details: PagePageComponentsContactDetailsBlock
}

type PagePageComponentsContactDetailsBlock {
  address: String
  phone: String
  email: String
}

type PagePageComponentsSectionWithBuckets {
  section_with_buckets: PagePageComponentsSectionWithBucketsBlock
}

type PagePageComponentsSectionWithBucketsBlock {
  title_h2: String
  description: String
  bucket_tabular: Boolean
  buckets: [PagePageComponentsSectionWithBucketsBlockBuckets]
}

type PagePageComponentsSectionWithBucketsBlockBuckets {
  title_h3: String
  description: PagePageComponentsSectionWithBucketsBlockBucketsDescription
  iconConnection: SysAssetConnection
  call_to_action: Link
}

type PagePageComponentsSectionWithBucketsBlockBucketsDescription {
  json: JSON
  embedded_itemsConnection(skip: Int = 0, limit: Int = 100): PagePageComponentsSectionWithBucketsBlockBucketsDescriptionEmbeddedItemsConnection
}

type PagePageComponentsSectionWithBucketsBlockBucketsDescriptionEmbeddedItemsConnection {
  totalCount: Int
  edges: [PagePageComponentsSectionWithBucketsBlockBucketsDescriptionEmbeddedItemsEdge]
}

type PagePageComponentsSectionWithBucketsBlockBucketsDescriptionEmbeddedItemsEdge {
  node: PagePageComponentsSectionWithBucketsBlockBucketsDescriptionEmbeddedItemsNode
}

union PagePageComponentsSectionWithBucketsBlockBucketsDescriptionEmbeddedItemsNode = SysAsset

type PagePageComponentsSection {
  section: PagePageComponentsSectionBlock
}

type PagePageComponentsSectionBlock {
  title_h2: String
  description: String
  call_to_action: Link
  imageConnection: SysAssetConnection
  image_alignment: String
}

type PagePageComponentsSectionWithCards {
  section_with_cards: PagePageComponentsSectionWithCardsBlock
}

type PagePageComponentsSectionWithCardsBlock {
  cards: [PagePageComponentsSectionWithCardsBlockCards]
}

type PagePageComponentsSectionWithCardsBlockCards {
  title_h3: String
  description: String
  call_to_action: Link
}

type PagePageComponentsSectionWithHtmlCode {
  section_with_html_code: PagePageComponentsSectionWithHtmlCodeBlock
}

type PagePageComponentsSectionWithHtmlCodeBlock {
  title: String
  description: PagePageComponentsSectionWithHtmlCodeBlockDescription
  html_code: String
  html_code_alignment: String
}

type PagePageComponentsSectionWithHtmlCodeBlockDescription {
  json: JSON
  embedded_itemsConnection(skip: Int = 0, limit: Int = 100): PagePageComponentsSectionWithHtmlCodeBlockDescriptionEmbeddedItemsConnection
}

type PagePageComponentsSectionWithHtmlCodeBlockDescriptionEmbeddedItemsConnection {
  totalCount: Int
  edges: [PagePageComponentsSectionWithHtmlCodeBlockDescriptionEmbeddedItemsEdge]
}

type PagePageComponentsSectionWithHtmlCodeBlockDescriptionEmbeddedItemsEdge {
  node: PagePageComponentsSectionWithHtmlCodeBlockDescriptionEmbeddedItemsNode
}

union PagePageComponentsSectionWithHtmlCodeBlockDescriptionEmbeddedItemsNode = SysAsset

type PagePageComponentsFromBlog {
  from_blog: PagePageComponentsFromBlogBlock
}

type PagePageComponentsFromBlogBlock {
  title_h2: String
  featured_blogsConnection(skip: Int = 0, limit: Int = 100): PagePageComponentsFromBlogBlockFeaturedBlogsConnection
  view_articles: Link
}

type PagePageComponentsFromBlogBlockFeaturedBlogsConnection {
  totalCount: Int
  edges: [PagePageComponentsFromBlogBlockFeaturedBlogsEdge]
}

type PagePageComponentsFromBlogBlockFeaturedBlogsEdge {
  node: PagePageComponentsFromBlogBlockFeaturedBlogsNode
}

union PagePageComponentsFromBlogBlockFeaturedBlogsNode = BlogPost

type PagePageComponentsOurTeam {
  our_team: PagePageComponentsOurTeamBlock
}

type PagePageComponentsOurTeamBlock {
  title_h2: String
  description: String
  employees: [PagePageComponentsOurTeamBlockEmployees]
}

type PagePageComponentsOurTeamBlockEmployees {
  name: String
  designation: String
  imageConnection: SysAssetConnection
}

type PagePageComponentsWidget {
  widget: PagePageComponentsWidgetBlock
}

type PagePageComponentsWidgetBlock {
  title_h2: String
  type: String
}

type HeaderNotificationBar {
  announcement_text: HeaderNotificationBarAnnouncementText
  show_announcement: Boolean
}

type HeaderNotificationBarAnnouncementText {
  json: JSON
  embedded_itemsConnection(skip: Int = 0, limit: Int = 100): HeaderNotificationBarAnnouncementTextEmbeddedItemsConnection
}

type HeaderNotificationBarAnnouncementTextEmbeddedItemsConnection {
  totalCount: Int
  edges: [HeaderNotificationBarAnnouncementTextEmbeddedItemsEdge]
}

type HeaderNotificationBarAnnouncementTextEmbeddedItemsEdge {
  node: HeaderNotificationBarAnnouncementTextEmbeddedItemsNode
}

union HeaderNotificationBarAnnouncementTextEmbeddedItemsNode = SysAsset

type AllHeader {
  total: Int
  items: [Header]
}

input HeaderWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  logo: SysAssetWhere
  logo_exists: Boolean
  navigation_menu: HeaderNavigationMenuWhere
  navigation_menu_exists: Boolean
  notification_bar: HeaderNotificationBarWhere
  notification_bar_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [HeaderWhere]
  OR: [HeaderWhere]
}

input HeaderNavigationMenuWhere {
  label: String
  label_ne: String
  label_in: [String]
  label_nin: [String]
  label_exists: Boolean
  page_reference: HeaderNavigationMenuPageReferenceWhere
  page_reference_exists: Boolean
}

input HeaderNavigationMenuPageReferenceWhere {
  page: PageWhere
  MATCH: EvalReferenceEnum
}

input PageWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  page_components: PagePageComponentsWhere
  page_components_exists: Boolean
  seo: SeoWhere
  seo_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [PageWhere]
  OR: [PageWhere]
}

input PagePageComponentsWhere {
  hero_banner: PagePageComponentsHeroBannerBlockWhere
  hero_banner_exists: Boolean
  contact_details: PagePageComponentsContactDetailsBlockWhere
  contact_details_exists: Boolean
  section_with_buckets: PagePageComponentsSectionWithBucketsBlockWhere
  section_with_buckets_exists: Boolean
  section: PagePageComponentsSectionBlockWhere
  section_exists: Boolean
  section_with_cards: PagePageComponentsSectionWithCardsBlockWhere
  section_with_cards_exists: Boolean
  section_with_html_code: PagePageComponentsSectionWithHtmlCodeBlockWhere
  section_with_html_code_exists: Boolean
  from_blog: PagePageComponentsFromBlogBlockWhere
  from_blog_exists: Boolean
  our_team: PagePageComponentsOurTeamBlockWhere
  our_team_exists: Boolean
  widget: PagePageComponentsWidgetBlockWhere
  widget_exists: Boolean
}

input PagePageComponentsHeroBannerBlockWhere {
  banner_image: SysAssetWhere
  banner_image_exists: Boolean
  bg_color: String
  bg_color_ne: String
  bg_color_in: [String]
  bg_color_nin: [String]
  bg_color_exists: Boolean
  text_color: String
  text_color_ne: String
  text_color_in: [String]
  text_color_nin: [String]
  text_color_exists: Boolean
  banner_title: String
  banner_title_ne: String
  banner_title_in: [String]
  banner_title_nin: [String]
  banner_title_exists: Boolean
  banner_description: String
  banner_description_ne: String
  banner_description_in: [String]
  banner_description_nin: [String]
  banner_description_exists: Boolean
  call_to_action: LinkWhere
  call_to_action_exists: Boolean
}

input PagePageComponentsContactDetailsBlockWhere {
  address: String
  address_ne: String
  address_in: [String]
  address_nin: [String]
  address_exists: Boolean
  phone: String
  phone_ne: String
  phone_in: [String]
  phone_nin: [String]
  phone_exists: Boolean
  email: String
  email_ne: String
  email_in: [String]
  email_nin: [String]
  email_exists: Boolean
}

input PagePageComponentsSectionWithBucketsBlockWhere {
  title_h2: String
  title_h2_ne: String
  title_h2_in: [String]
  title_h2_nin: [String]
  title_h2_exists: Boolean
  description: String
  description_ne: String
  description_in: [String]
  description_nin: [String]
  description_exists: Boolean
  bucket_tabular: Boolean
  bucket_tabular_exists: Boolean
  bucket_tabular_ne: Boolean
  buckets: PagePageComponentsSectionWithBucketsBlockBucketsWhere
  buckets_exists: Boolean
}

input PagePageComponentsSectionWithBucketsBlockBucketsWhere {
  title_h3: String
  title_h3_ne: String
  title_h3_in: [String]
  title_h3_nin: [String]
  title_h3_exists: Boolean
  description: JSON
  description_exists: Boolean
  icon: SysAssetWhere
  icon_exists: Boolean
  call_to_action: LinkWhere
  call_to_action_exists: Boolean
}

input PagePageComponentsSectionBlockWhere {
  title_h2: String
  title_h2_ne: String
  title_h2_in: [String]
  title_h2_nin: [String]
  title_h2_exists: Boolean
  description: String
  description_ne: String
  description_in: [String]
  description_nin: [String]
  description_exists: Boolean
  call_to_action: LinkWhere
  call_to_action_exists: Boolean
  image: SysAssetWhere
  image_exists: Boolean
  image_alignment: String
  image_alignment_ne: String
  image_alignment_in: [String]
  image_alignment_nin: [String]
  image_alignment_exists: Boolean
}

input PagePageComponentsSectionWithCardsBlockWhere {
  cards: PagePageComponentsSectionWithCardsBlockCardsWhere
  cards_exists: Boolean
}

input PagePageComponentsSectionWithCardsBlockCardsWhere {
  title_h3: String
  title_h3_ne: String
  title_h3_in: [String]
  title_h3_nin: [String]
  title_h3_exists: Boolean
  description: String
  description_ne: String
  description_in: [String]
  description_nin: [String]
  description_exists: Boolean
  call_to_action: LinkWhere
  call_to_action_exists: Boolean
}

input PagePageComponentsSectionWithHtmlCodeBlockWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  description: JSON
  description_exists: Boolean
  html_code: String
  html_code_ne: String
  html_code_in: [String]
  html_code_nin: [String]
  html_code_exists: Boolean
  html_code_alignment: String
  html_code_alignment_ne: String
  html_code_alignment_in: [String]
  html_code_alignment_nin: [String]
  html_code_alignment_exists: Boolean
}

input PagePageComponentsFromBlogBlockWhere {
  title_h2: String
  title_h2_ne: String
  title_h2_in: [String]
  title_h2_nin: [String]
  title_h2_exists: Boolean
  featured_blogs: PagePageComponentsFromBlogBlockFeaturedBlogsWhere
  featured_blogs_count: Int
  featured_blogs_exists: Boolean
  view_articles: LinkWhere
  view_articles_exists: Boolean
}

input PagePageComponentsFromBlogBlockFeaturedBlogsWhere {
  blog_post: BlogPostWhere
  MATCH: EvalReferenceEnum
}

input PagePageComponentsOurTeamBlockWhere {
  title_h2: String
  title_h2_ne: String
  title_h2_in: [String]
  title_h2_nin: [String]
  title_h2_exists: Boolean
  description: String
  description_ne: String
  description_in: [String]
  description_nin: [String]
  description_exists: Boolean
  employees: PagePageComponentsOurTeamBlockEmployeesWhere
  employees_exists: Boolean
}

input PagePageComponentsOurTeamBlockEmployeesWhere {
  name: String
  name_ne: String
  name_in: [String]
  name_nin: [String]
  name_exists: Boolean
  designation: String
  designation_ne: String
  designation_in: [String]
  designation_nin: [String]
  designation_exists: Boolean
  image: SysAssetWhere
  image_exists: Boolean
}

input PagePageComponentsWidgetBlockWhere {
  title_h2: String
  title_h2_ne: String
  title_h2_in: [String]
  title_h2_nin: [String]
  title_h2_exists: Boolean
  type: String
  type_ne: String
  type_in: [String]
  type_nin: [String]
  type_exists: Boolean
}

input HeaderNotificationBarWhere {
  announcement_text: JSON
  announcement_text_exists: Boolean
  show_announcement: Boolean
  show_announcement_exists: Boolean
  show_announcement_ne: Boolean
}

enum HeaderOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllPage {
  total: Int
  items: [Page]
}

enum PageOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllAuthor {
  total: Int
  items: [Author]
}

enum AuthorOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type WebConfiguration {
  title: String
  logoConnection: SysAssetConnection
  main_navigationConnection: WebConfigurationMainNavigationConnection
  footer_navigationConnection: WebConfigurationFooterNavigationConnection
  system: EntrySystemField
}

type WebConfigurationMainNavigationConnection {
  totalCount: Int
  edges: [WebConfigurationMainNavigationEdge]
}

type WebConfigurationMainNavigationEdge {
  node: WebConfigurationMainNavigationNode
}

union WebConfigurationMainNavigationNode = Navigation

type Navigation {
  title: String
  items: [NavigationItems]
  system: EntrySystemField
}

type NavigationItems {
  text: String
  linkConnection: NavigationItemsLinkConnection
  mega_menuConnection: NavigationItemsMegaMenuConnection
}

type NavigationItemsLinkConnection {
  totalCount: Int
  edges: [NavigationItemsLinkEdge]
}

type NavigationItemsLinkEdge {
  node: NavigationItemsLinkNode
}

union NavigationItemsLinkNode = LandingPage | ArticleListingPage | Article

type LandingPage {
  title: String
  url: String
  components: [LandingPageComponents]
  seo: Seo
  system: EntrySystemField
}

union LandingPageComponents = LandingPageComponentsCardCollection | LandingPageComponentsTeaser | LandingPageComponentsText | LandingPageComponentsTextAndImage

type LandingPageComponentsCardCollection {
  card_collection: CardCollection
}

type CardCollection {
  header: CardCollectionHeader
  cards: [CardCollectionCards]
}

type CardCollectionHeader {
  heading: String
  sub_heading: String
}

type CardCollectionCards {
  imageConnection: SysAssetConnection
  image_alt_text: String
  title: String
  subtitle: String
  content: String
  cta: CardCollectionCardsCta
}

type CardCollectionCardsCta {
  text: String
  linkConnection: CardCollectionCardsCtaLinkConnection
}

type CardCollectionCardsCtaLinkConnection {
  totalCount: Int
  edges: [CardCollectionCardsCtaLinkEdge]
}

type CardCollectionCardsCtaLinkEdge {
  node: CardCollectionCardsCtaLinkNode
}

union CardCollectionCardsCtaLinkNode = LandingPage | HomePage | ArticleListingPage | Article

type HomePage {
  title: String
  url: String
  components: [HomePageComponents]
  featured_articles: FeaturedArticles
  seo: Seo
  system: EntrySystemField
}

union HomePageComponents = HomePageComponentsCardCollection | HomePageComponentsTeaser | HomePageComponentsText | HomePageComponentsTextAndImage

type HomePageComponentsCardCollection {
  card_collection: CardCollection
}

type HomePageComponentsTeaser {
  teaser: Teaser
}

type Teaser {
  heading: String
  content: String
  image: [TeaserImage]
  cta: [TeaserCta]
  styles: TeaserStyles
}

type TeaserImage {
  imageConnection: SysAssetConnection
  image_alt_text: String
}

type TeaserCta {
  text: String
  linkConnection: TeaserCtaLinkConnection
  external_url: String
}

type TeaserCtaLinkConnection {
  totalCount: Int
  edges: [TeaserCtaLinkEdge]
}

type TeaserCtaLinkEdge {
  node: TeaserCtaLinkNode
}

union TeaserCtaLinkNode = LandingPage | HomePage | ArticleListingPage | Article

type ArticleListingPage {
  title: String
  url: String
  components: [ArticleListingPageComponents]
  seo: Seo
  system: EntrySystemField
}

union ArticleListingPageComponents = ArticleListingPageComponentsCardCollection | ArticleListingPageComponentsTeaser | ArticleListingPageComponentsText | ArticleListingPageComponentsTextAndImage

type ArticleListingPageComponentsCardCollection {
  card_collection: CardCollection
}

type ArticleListingPageComponentsTeaser {
  teaser: Teaser
}

type ArticleListingPageComponentsText {
  text: Text
}

type Text {
  content: String
  styles: TextStyles
}

type TextStyles {
  background_color: String
}

type ArticleListingPageComponentsTextAndImage {
  text_and_image: TextAndImage
}

type TextAndImage {
  heading: String
  content: String
  iconConnection: SysAssetConnection
  imageConnection: SysAssetConnection
  image_alt_text: String
  cta: [TextAndImageCta]
  styles: TextAndImageStyles
}

type TextAndImageCta {
  text: String
  linkConnection: TextAndImageCtaLinkConnection
  external_url: String
}

type TextAndImageCtaLinkConnection {
  totalCount: Int
  edges: [TextAndImageCtaLinkEdge]
}

type TextAndImageCtaLinkEdge {
  node: TextAndImageCtaLinkNode
}

union TextAndImageCtaLinkNode = LandingPage | HomePage | ArticleListingPage | Article

type Article {
  title: String
  subtitle: String
  url: String
  cover_imageConnection: SysAssetConnection
  summary: String
  content: String
  region: [String]
  topics: [String]
  show_related_regions_and_topics: Boolean
  show_related_articles: Boolean
  related_articles: ArticleRelatedArticles
  seo: Seo
  system: EntrySystemField
}

type ArticleRelatedArticles {
  heading: String
  sub_heading: String
  number_of_articles: Float
}

type TextAndImageStyles {
  image_position: String
  theme: String
}

type TeaserStyles {
  text_align: String
}

type HomePageComponentsText {
  text: Text
}

type HomePageComponentsTextAndImage {
  text_and_image: TextAndImage
}

type FeaturedArticles {
  heading: String
  sub_heading: String
  articlesConnection(skip: Int = 0, limit: Int = 100): FeaturedArticlesArticlesConnection
}

type FeaturedArticlesArticlesConnection {
  totalCount: Int
  edges: [FeaturedArticlesArticlesEdge]
}

type FeaturedArticlesArticlesEdge {
  node: FeaturedArticlesArticlesNode
}

union FeaturedArticlesArticlesNode = Article

type LandingPageComponentsTeaser {
  teaser: Teaser
}

type LandingPageComponentsText {
  text: Text
}

type LandingPageComponentsTextAndImage {
  text_and_image: TextAndImage
}

type NavigationItemsMegaMenuConnection {
  totalCount: Int
  edges: [NavigationItemsMegaMenuEdge]
}

type NavigationItemsMegaMenuEdge {
  node: NavigationItemsMegaMenuNode
}

union NavigationItemsMegaMenuNode = MegaMenu

type MegaMenu {
  title: String
  sections: [MegaMenuSections]
  cta_groupConnection: MegaMenuCtaGroupConnection
  system: EntrySystemField
}

type MegaMenuSections {
  title: String
  linkConnection: MegaMenuSectionsLinkConnection
  links: [MegaMenuSectionsLinks]
}

type MegaMenuSectionsLinkConnection {
  totalCount: Int
  edges: [MegaMenuSectionsLinkEdge]
}

type MegaMenuSectionsLinkEdge {
  node: MegaMenuSectionsLinkNode
}

union MegaMenuSectionsLinkNode = LandingPage | HomePage | ArticleListingPage | Article

type MegaMenuSectionsLinks {
  text: String
  thumbnailConnection: SysAssetConnection
  linkConnection: MegaMenuSectionsLinksLinkConnection
}

type MegaMenuSectionsLinksLinkConnection {
  totalCount: Int
  edges: [MegaMenuSectionsLinksLinkEdge]
}

type MegaMenuSectionsLinksLinkEdge {
  node: MegaMenuSectionsLinksLinkNode
}

union MegaMenuSectionsLinksLinkNode = LandingPage | HomePage | ArticleListingPage | Article

type MegaMenuCtaGroupConnection {
  totalCount: Int
  edges: [MegaMenuCtaGroupEdge]
}

type MegaMenuCtaGroupEdge {
  node: MegaMenuCtaGroupNode
}

union MegaMenuCtaGroupNode = CtaGroup

type CtaGroup {
  title: String
  call_to_action: [CtaGroupCallToAction]
  system: EntrySystemField
}

type CtaGroupCallToAction {
  iconConnection: SysAssetConnection
  text: String
  internal_linkConnection: CtaGroupCallToActionInternalLinkConnection
  external_link: String
}

type CtaGroupCallToActionInternalLinkConnection {
  totalCount: Int
  edges: [CtaGroupCallToActionInternalLinkEdge]
}

type CtaGroupCallToActionInternalLinkEdge {
  node: CtaGroupCallToActionInternalLinkNode
}

union CtaGroupCallToActionInternalLinkNode = LandingPage | ArticleListingPage | Article

type WebConfigurationFooterNavigationConnection {
  totalCount: Int
  edges: [WebConfigurationFooterNavigationEdge]
}

type WebConfigurationFooterNavigationEdge {
  node: WebConfigurationFooterNavigationNode
}

union WebConfigurationFooterNavigationNode = Menu

type Menu {
  title: String
  sections: [MenuSections]
  copyright_info: String
  system: EntrySystemField
}

type MenuSections {
  title: String
  linkConnection: MenuSectionsLinkConnection
  links: [MenuSectionsLinks]
}

type MenuSectionsLinkConnection {
  totalCount: Int
  edges: [MenuSectionsLinkEdge]
}

type MenuSectionsLinkEdge {
  node: MenuSectionsLinkNode
}

union MenuSectionsLinkNode = LandingPage | HomePage | ArticleListingPage | Article

type MenuSectionsLinks {
  text: String
  linkConnection: MenuSectionsLinksLinkConnection
  external_link: Link
}

type MenuSectionsLinksLinkConnection {
  totalCount: Int
  edges: [MenuSectionsLinksLinkEdge]
}

type MenuSectionsLinksLinkEdge {
  node: MenuSectionsLinksLinkNode
}

union MenuSectionsLinksLinkNode = LandingPage | HomePage | ArticleListingPage | Article

type AllWebConfiguration {
  total: Int
  items: [WebConfiguration]
}

input WebConfigurationWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  logo: SysAssetWhere
  logo_exists: Boolean
  main_navigation: WebConfigurationMainNavigationWhere
  main_navigation_exists: Boolean
  footer_navigation: WebConfigurationFooterNavigationWhere
  footer_navigation_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [WebConfigurationWhere]
  OR: [WebConfigurationWhere]
}

input WebConfigurationMainNavigationWhere {
  navigation: NavigationWhere
  MATCH: EvalReferenceEnum
}

input NavigationWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  items: NavigationItemsWhere
  items_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [NavigationWhere]
  OR: [NavigationWhere]
}

input NavigationItemsWhere {
  text: String
  text_ne: String
  text_in: [String]
  text_nin: [String]
  text_exists: Boolean
  link: NavigationItemsLinkWhere
  link_exists: Boolean
  mega_menu: NavigationItemsMegaMenuWhere
  mega_menu_exists: Boolean
}

input NavigationItemsLinkWhere {
  landing_page: LandingPageWhere
  article_listing_page: ArticleListingPageWhere
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

input LandingPageWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  components: LandingPageComponentsWhere
  components_exists: Boolean
  seo: SeoWhere
  seo_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [LandingPageWhere]
  OR: [LandingPageWhere]
}

input LandingPageComponentsWhere {
  card_collection: LandingPageComponentsCardCollectionWhere
  card_collection_exists: Boolean
  teaser: LandingPageComponentsTeaserWhere
  teaser_exists: Boolean
  text: LandingPageComponentsTextWhere
  text_exists: Boolean
  text_and_image: LandingPageComponentsTextAndImageWhere
  text_and_image_exists: Boolean
}

input LandingPageComponentsCardCollectionWhere {
  header: CardCollectionHeaderWhere
  header_exists: Boolean
  cards: CardCollectionCardsWhere
  cards_exists: Boolean
}

input CardCollectionHeaderWhere {
  heading: String
  heading_ne: String
  heading_in: [String]
  heading_nin: [String]
  heading_exists: Boolean
  sub_heading: String
  sub_heading_ne: String
  sub_heading_in: [String]
  sub_heading_nin: [String]
  sub_heading_exists: Boolean
}

input CardCollectionCardsWhere {
  image: SysAssetWhere
  image_exists: Boolean
  image_alt_text: String
  image_alt_text_ne: String
  image_alt_text_in: [String]
  image_alt_text_nin: [String]
  image_alt_text_exists: Boolean
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  subtitle: String
  subtitle_ne: String
  subtitle_in: [String]
  subtitle_nin: [String]
  subtitle_exists: Boolean
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  cta: CardCollectionCardsCtaWhere
  cta_exists: Boolean
}

input CardCollectionCardsCtaWhere {
  text: String
  text_ne: String
  text_in: [String]
  text_nin: [String]
  text_exists: Boolean
  link: CardCollectionCardsCtaLinkWhere
  link_exists: Boolean
}

input CardCollectionCardsCtaLinkWhere {
  landing_page: LandingPageWhere
  home_page: HomePageWhere
  article_listing_page: ArticleListingPageWhere
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

input HomePageWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  components: HomePageComponentsWhere
  components_exists: Boolean
  featured_articles: FeaturedArticlesWhere
  featured_articles_exists: Boolean
  seo: SeoWhere
  seo_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [HomePageWhere]
  OR: [HomePageWhere]
}

input HomePageComponentsWhere {
  card_collection: HomePageComponentsCardCollectionWhere
  card_collection_exists: Boolean
  teaser: HomePageComponentsTeaserWhere
  teaser_exists: Boolean
  text: HomePageComponentsTextWhere
  text_exists: Boolean
  text_and_image: HomePageComponentsTextAndImageWhere
  text_and_image_exists: Boolean
}

input HomePageComponentsCardCollectionWhere {
  header: CardCollectionHeaderWhere
  header_exists: Boolean
  cards: CardCollectionCardsWhere
  cards_exists: Boolean
}

input HomePageComponentsTeaserWhere {
  heading: String
  heading_ne: String
  heading_in: [String]
  heading_nin: [String]
  heading_exists: Boolean
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  image: TeaserImageWhere
  image_exists: Boolean
  cta: TeaserCtaWhere
  cta_exists: Boolean
  styles: TeaserStylesWhere
  styles_exists: Boolean
}

input TeaserImageWhere {
  image: SysAssetWhere
  image_exists: Boolean
  image_alt_text: String
  image_alt_text_ne: String
  image_alt_text_in: [String]
  image_alt_text_nin: [String]
  image_alt_text_exists: Boolean
}

input TeaserCtaWhere {
  text: String
  text_ne: String
  text_in: [String]
  text_nin: [String]
  text_exists: Boolean
  link: TeaserCtaLinkWhere
  link_exists: Boolean
  external_url: String
  external_url_ne: String
  external_url_in: [String]
  external_url_nin: [String]
  external_url_exists: Boolean
}

input TeaserCtaLinkWhere {
  landing_page: LandingPageWhere
  home_page: HomePageWhere
  article_listing_page: ArticleListingPageWhere
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

input ArticleListingPageWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  components: ArticleListingPageComponentsWhere
  components_exists: Boolean
  seo: SeoWhere
  seo_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [ArticleListingPageWhere]
  OR: [ArticleListingPageWhere]
}

input ArticleListingPageComponentsWhere {
  card_collection: ArticleListingPageComponentsCardCollectionWhere
  card_collection_exists: Boolean
  teaser: ArticleListingPageComponentsTeaserWhere
  teaser_exists: Boolean
  text: ArticleListingPageComponentsTextWhere
  text_exists: Boolean
  text_and_image: ArticleListingPageComponentsTextAndImageWhere
  text_and_image_exists: Boolean
}

input ArticleListingPageComponentsCardCollectionWhere {
  header: CardCollectionHeaderWhere
  header_exists: Boolean
  cards: CardCollectionCardsWhere
  cards_exists: Boolean
}

input ArticleListingPageComponentsTeaserWhere {
  heading: String
  heading_ne: String
  heading_in: [String]
  heading_nin: [String]
  heading_exists: Boolean
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  image: TeaserImageWhere
  image_exists: Boolean
  cta: TeaserCtaWhere
  cta_exists: Boolean
  styles: TeaserStylesWhere
  styles_exists: Boolean
}

input TeaserStylesWhere {
  text_align: String
  text_align_ne: String
  text_align_in: [String]
  text_align_nin: [String]
  text_align_exists: Boolean
}

input ArticleListingPageComponentsTextWhere {
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  styles: TextStylesWhere
  styles_exists: Boolean
}

input TextStylesWhere {
  background_color: String
  background_color_ne: String
  background_color_in: [String]
  background_color_nin: [String]
  background_color_exists: Boolean
}

input ArticleListingPageComponentsTextAndImageWhere {
  heading: String
  heading_ne: String
  heading_in: [String]
  heading_nin: [String]
  heading_exists: Boolean
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  icon: SysAssetWhere
  icon_exists: Boolean
  image: SysAssetWhere
  image_exists: Boolean
  image_alt_text: String
  image_alt_text_ne: String
  image_alt_text_in: [String]
  image_alt_text_nin: [String]
  image_alt_text_exists: Boolean
  cta: TextAndImageCtaWhere
  cta_exists: Boolean
  styles: TextAndImageStylesWhere
  styles_exists: Boolean
}

input TextAndImageCtaWhere {
  text: String
  text_ne: String
  text_in: [String]
  text_nin: [String]
  text_exists: Boolean
  link: TextAndImageCtaLinkWhere
  link_exists: Boolean
  external_url: String
  external_url_ne: String
  external_url_in: [String]
  external_url_nin: [String]
  external_url_exists: Boolean
}

input TextAndImageCtaLinkWhere {
  landing_page: LandingPageWhere
  home_page: HomePageWhere
  article_listing_page: ArticleListingPageWhere
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

input ArticleWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  subtitle: String
  subtitle_ne: String
  subtitle_in: [String]
  subtitle_nin: [String]
  subtitle_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  cover_image: SysAssetWhere
  cover_image_exists: Boolean
  summary: String
  summary_ne: String
  summary_in: [String]
  summary_nin: [String]
  summary_exists: Boolean
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  region: String
  region_ne: String
  region_in: [String]
  region_nin: [String]
  region_exists: Boolean
  topics: String
  topics_ne: String
  topics_in: [String]
  topics_nin: [String]
  topics_exists: Boolean
  show_related_regions_and_topics: Boolean
  show_related_regions_and_topics_exists: Boolean
  show_related_regions_and_topics_ne: Boolean
  show_related_articles: Boolean
  show_related_articles_exists: Boolean
  show_related_articles_ne: Boolean
  related_articles: ArticleRelatedArticlesWhere
  related_articles_exists: Boolean
  seo: SeoWhere
  seo_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [ArticleWhere]
  OR: [ArticleWhere]
}

input ArticleRelatedArticlesWhere {
  heading: String
  heading_ne: String
  heading_in: [String]
  heading_nin: [String]
  heading_exists: Boolean
  sub_heading: String
  sub_heading_ne: String
  sub_heading_in: [String]
  sub_heading_nin: [String]
  sub_heading_exists: Boolean
  number_of_articles: Float
  number_of_articles_in: [Float]
  number_of_articles_nin: [Float]
  number_of_articles_exists: Boolean
  number_of_articles_ne: Float
  number_of_articles_lt: Float
  number_of_articles_lte: Float
  number_of_articles_gt: Float
  number_of_articles_gte: Float
}

input TextAndImageStylesWhere {
  image_position: String
  image_position_ne: String
  image_position_in: [String]
  image_position_nin: [String]
  image_position_exists: Boolean
  theme: String
  theme_ne: String
  theme_in: [String]
  theme_nin: [String]
  theme_exists: Boolean
}

input HomePageComponentsTextWhere {
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  styles: TextStylesWhere
  styles_exists: Boolean
}

input HomePageComponentsTextAndImageWhere {
  heading: String
  heading_ne: String
  heading_in: [String]
  heading_nin: [String]
  heading_exists: Boolean
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  icon: SysAssetWhere
  icon_exists: Boolean
  image: SysAssetWhere
  image_exists: Boolean
  image_alt_text: String
  image_alt_text_ne: String
  image_alt_text_in: [String]
  image_alt_text_nin: [String]
  image_alt_text_exists: Boolean
  cta: TextAndImageCtaWhere
  cta_exists: Boolean
  styles: TextAndImageStylesWhere
  styles_exists: Boolean
}

input FeaturedArticlesWhere {
  heading: String
  heading_ne: String
  heading_in: [String]
  heading_nin: [String]
  heading_exists: Boolean
  sub_heading: String
  sub_heading_ne: String
  sub_heading_in: [String]
  sub_heading_nin: [String]
  sub_heading_exists: Boolean
  articles: FeaturedArticlesArticlesWhere
  articles_count: Int
  articles_exists: Boolean
}

input FeaturedArticlesArticlesWhere {
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

input LandingPageComponentsTeaserWhere {
  heading: String
  heading_ne: String
  heading_in: [String]
  heading_nin: [String]
  heading_exists: Boolean
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  image: TeaserImageWhere
  image_exists: Boolean
  cta: TeaserCtaWhere
  cta_exists: Boolean
  styles: TeaserStylesWhere
  styles_exists: Boolean
}

input LandingPageComponentsTextWhere {
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  styles: TextStylesWhere
  styles_exists: Boolean
}

input LandingPageComponentsTextAndImageWhere {
  heading: String
  heading_ne: String
  heading_in: [String]
  heading_nin: [String]
  heading_exists: Boolean
  content: String
  content_ne: String
  content_in: [String]
  content_nin: [String]
  content_exists: Boolean
  icon: SysAssetWhere
  icon_exists: Boolean
  image: SysAssetWhere
  image_exists: Boolean
  image_alt_text: String
  image_alt_text_ne: String
  image_alt_text_in: [String]
  image_alt_text_nin: [String]
  image_alt_text_exists: Boolean
  cta: TextAndImageCtaWhere
  cta_exists: Boolean
  styles: TextAndImageStylesWhere
  styles_exists: Boolean
}

input NavigationItemsMegaMenuWhere {
  mega_menu: MegaMenuWhere
  MATCH: EvalReferenceEnum
}

input MegaMenuWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  sections: MegaMenuSectionsWhere
  sections_exists: Boolean
  cta_group: MegaMenuCtaGroupWhere
  cta_group_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [MegaMenuWhere]
  OR: [MegaMenuWhere]
}

input MegaMenuSectionsWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  link: MegaMenuSectionsLinkWhere
  link_exists: Boolean
  links: MegaMenuSectionsLinksWhere
  links_exists: Boolean
}

input MegaMenuSectionsLinkWhere {
  landing_page: LandingPageWhere
  home_page: HomePageWhere
  article_listing_page: ArticleListingPageWhere
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

input MegaMenuSectionsLinksWhere {
  text: String
  text_ne: String
  text_in: [String]
  text_nin: [String]
  text_exists: Boolean
  thumbnail: SysAssetWhere
  thumbnail_exists: Boolean
  link: MegaMenuSectionsLinksLinkWhere
  link_exists: Boolean
}

input MegaMenuSectionsLinksLinkWhere {
  landing_page: LandingPageWhere
  home_page: HomePageWhere
  article_listing_page: ArticleListingPageWhere
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

input MegaMenuCtaGroupWhere {
  cta_group: CtaGroupWhere
  MATCH: EvalReferenceEnum
}

input CtaGroupWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  call_to_action: CtaGroupCallToActionWhere
  call_to_action_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [CtaGroupWhere]
  OR: [CtaGroupWhere]
}

input CtaGroupCallToActionWhere {
  icon: SysAssetWhere
  icon_exists: Boolean
  text: String
  text_ne: String
  text_in: [String]
  text_nin: [String]
  text_exists: Boolean
  internal_link: CtaGroupCallToActionInternalLinkWhere
  internal_link_exists: Boolean
  external_link: String
  external_link_ne: String
  external_link_in: [String]
  external_link_nin: [String]
  external_link_exists: Boolean
}

input CtaGroupCallToActionInternalLinkWhere {
  landing_page: LandingPageWhere
  article_listing_page: ArticleListingPageWhere
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

input WebConfigurationFooterNavigationWhere {
  menu: MenuWhere
  MATCH: EvalReferenceEnum
}

input MenuWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  sections: MenuSectionsWhere
  sections_exists: Boolean
  copyright_info: String
  copyright_info_ne: String
  copyright_info_in: [String]
  copyright_info_nin: [String]
  copyright_info_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [MenuWhere]
  OR: [MenuWhere]
}

input MenuSectionsWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  link: MenuSectionsLinkWhere
  link_exists: Boolean
  links: MenuSectionsLinksWhere
  links_exists: Boolean
}

input MenuSectionsLinkWhere {
  landing_page: LandingPageWhere
  home_page: HomePageWhere
  article_listing_page: ArticleListingPageWhere
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

input MenuSectionsLinksWhere {
  text: String
  text_ne: String
  text_in: [String]
  text_nin: [String]
  text_exists: Boolean
  link: MenuSectionsLinksLinkWhere
  link_exists: Boolean
  external_link: LinkWhere
  external_link_exists: Boolean
}

input MenuSectionsLinksLinkWhere {
  landing_page: LandingPageWhere
  home_page: HomePageWhere
  article_listing_page: ArticleListingPageWhere
  article: ArticleWhere
  MATCH: EvalReferenceEnum
}

enum WebConfigurationOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type ProductTest {
  title: String
  url: String
  product_page: ProductFields
  system: EntrySystemField
}

type ProductFields {
  product_title: String
  description: String
  product_blocks: [ProductFieldsProductBlocks]
}

union ProductFieldsProductBlocks = ProductFieldsProductBlocksOverview

type ProductFieldsProductBlocksOverview {
  overview: ProductFieldsProductBlocksOverviewBlock
}

type ProductFieldsProductBlocksOverviewBlock {
  text_block: String
  image_select: String
}

type AllProductTest {
  total: Int
  items: [ProductTest]
}

input ProductTestWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  product_page: ProductFieldsWhere
  product_page_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [ProductTestWhere]
  OR: [ProductTestWhere]
}

input ProductFieldsWhere {
  product_title: String
  product_title_ne: String
  product_title_in: [String]
  product_title_nin: [String]
  product_title_exists: Boolean
  description: String
  description_ne: String
  description_in: [String]
  description_nin: [String]
  description_exists: Boolean
  product_blocks: ProductFieldsProductBlocksWhere
  product_blocks_exists: Boolean
}

input ProductFieldsProductBlocksWhere {
  overview: ProductFieldsProductBlocksOverviewBlockWhere
  overview_exists: Boolean
}

input ProductFieldsProductBlocksOverviewBlockWhere {
  text_block: String
  text_block_ne: String
  text_block_in: [String]
  text_block_nin: [String]
  text_block_exists: Boolean
  image_select: String
  image_select_ne: String
  image_select_in: [String]
  image_select_nin: [String]
  image_select_exists: Boolean
}

enum ProductTestOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type TestPage {
  title: String
  url: String
  single_line: [String]
  section_with_image: TestPageSectionWithImage
  system: EntrySystemField
}

type TestPageSectionWithImage {
  left_content: String
  link_cta: Link
  right_image: String
}

type AllTestPage {
  total: Int
  items: [TestPage]
}

input TestPageWhere {
  title: String
  title_ne: String
  title_in: [String]
  title_nin: [String]
  title_exists: Boolean
  url: String
  url_ne: String
  url_in: [String]
  url_nin: [String]
  url_exists: Boolean
  single_line: String
  single_line_ne: String
  single_line_in: [String]
  single_line_nin: [String]
  single_line_exists: Boolean
  section_with_image: TestPageSectionWithImageWhere
  section_with_image_exists: Boolean
  created_at: DateTime
  created_at_in: [DateTime]
  created_at_nin: [DateTime]
  created_at_ne: DateTime
  created_by: String
  created_by_in: [String]
  created_by_nin: [String]
  created_by_ne: String
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  updated_at: DateTime
  updated_at_in: [DateTime]
  updated_at_nin: [DateTime]
  updated_at_ne: DateTime
  updated_by: String
  updated_by_in: [String]
  updated_by_nin: [String]
  updated_by_ne: String
  updated_at_lt: DateTime
  updated_at_lte: DateTime
  updated_at_gt: DateTime
  updated_at_gte: DateTime
  locale: String
  locale_ne: String
  locale_in: [String]
  locale_nin: [String]
  locale_exists: Boolean
  uid: String
  uid_ne: String
  uid_in: [String]
  uid_nin: [String]
  uid_exists: Boolean
  tags_in: [String]
  tags_nin: [String]
  version: Int
  version_ne: Int
  version_in: [Int]
  version_nin: [Int]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  publish_details: SystemPublishDetailsWhere
  AND: [TestPageWhere]
  OR: [TestPageWhere]
}

input TestPageSectionWithImageWhere {
  left_content: String
  left_content_ne: String
  left_content_in: [String]
  left_content_nin: [String]
  left_content_exists: Boolean
  link_cta: LinkWhere
  link_cta_exists: Boolean
  right_image: String
  right_image_ne: String
  right_image_in: [String]
  right_image_nin: [String]
  right_image_exists: Boolean
}

enum TestPageOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllArticle {
  total: Int
  items: [Article]
}

enum ArticleOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllHomePage {
  total: Int
  items: [HomePage]
}

enum HomePageOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllLandingPage {
  total: Int
  items: [LandingPage]
}

enum LandingPageOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllCtaGroup {
  total: Int
  items: [CtaGroup]
}

enum CtaGroupOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllArticleListingPage {
  total: Int
  items: [ArticleListingPage]
}

enum ArticleListingPageOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllNavigation {
  total: Int
  items: [Navigation]
}

enum NavigationOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllMenu {
  total: Int
  items: [Menu]
}

enum MenuOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

type AllMegaMenu {
  total: Int
  items: [MegaMenu]
}

enum MegaMenuOrderBy {
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}